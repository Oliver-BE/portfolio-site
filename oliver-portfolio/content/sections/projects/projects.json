{
    "projects": [
        {
            "visible": true,
            "category": "",
            "title": "Ring of Fire",
            "description": "A parallelized Genetic Program for evolving rules to describe a cellular automaton based wildfire simulation with an error function based on data from Canadian wildfires. Both the genetic program and the wildfire simulator were written in Clojure by @icaruso21, @MGlusker, and myself.",
            "tags": ["Clojure", "Genetic Program"],
            "image": {
                "src": "../../images/fire-scar-comparison.png",
                "alt": "Ring of Fire",
                "linkTo": "https://github.com/Oliver-BE/ring-of-fire"
            },
            "links": [
                {
                    "type": "github",
                    "url": "https://github.com/Oliver-BE/ring-of-fire"
                }
            ]
        },
        {
            "visible": true,
            "category": "",
            "title": "Classifying Fake News",
            "description": "A formal report written in R that uses Natural Language Processing and Machine Learning to classify news article claims as either true or false. This project used a dataset of 1,911 unique PolitiFact claims and their associated truth ratings. Features were extracted from each claim using a bag-of-n-grams model with tf-idf as the scoring metric (the vocabulary size was first reduced using using lemmatization and stop word removal among other text cleaning procedures). Seven machine learning classification models (including a random forest, a multilayer perceptron, and a recurrent neural network) were fit and a maximum classification accuracy of 71% was achieved.",
            "tags": ["Natural Language Processing", "Machine Learning", "R", "Keras"],
            "image": {
                "src": "../../images/fake-news.png",
                "alt": "Fake News",
                "linkTo": "https://oliver-be.github.io/fake-news-nlp/"
            },
            "links": [
                {
                    "type": "github",
                    "url": "https://github.com/Oliver-BE/fake-news-nlp"
                },
                {
                    "type": "pdf",
                    "url": "/fake-news-nlp.pdf"
                },
                {
                    "type": "external",
                    "url": "https://oliver-be.github.io/fake-news-nlp/"
                }
            ]
        },
        {
            "visible": true,
            "category": "",
            "title": "Intellage: An Intelligent Photo Collage Creator",
            "description": "Written entirely from scratch in Java by @icaruso21 and myself, Intellage recreates a desired photo from a user-specified folder of images (both are selected via a built-in GUI). Intellage was used as an exemplar of a final project in subsequent semesters of the introductory computer science class for which it was written. The following outputs from Intellage each utilized an input folder containing 26,000 stock images.",
            "tags": ["Java"],
            "image": {
                "src": "../../images/intellage.jpg",
                "alt": "Intellage",
                "linkTo": "https://github.com/Oliver-BE/intellage"
            },
            "links": [
                {
                    "type": "github",
                    "url": "https://github.com/Oliver-BE/intellage"
                }
            ]
        },
        {
            "visible": true,
            "category": "",
            "title": "Visualizing Sorting Algorithms using Empirical",
            "description": "A web app written entirely in C++ that utilizes the Empirical D3-wrapper that I helped to write as a Summer 2020 WAVES participant. This project is meant to serve as a demo for how the new D3-wrapper can be used with Empirical (a library for building web interfaces with C++ and Emscripten) to create powerful web apps. Along with @elizabethcarney, @amlalejini, and @emilydolson I spent the summer creating a C++ wrapper for D3.js, a JavaScript library that allows for custom-made, interactive visualizations. We began the process of overhauling Empiricalâ€™s web visualization support for use in the next version of Avida-ED (an award-winning piece of digital evolution education software).",
            "tags": ["C++", "JavaScript", "D3.js"],
            "image": {
                "src": "../../images/empirical.png",
                "alt": "Sorting Algorithms",
                "linkTo": "https://oliver-be.github.io/sorting-algorithms-d3/"
            },
            "tags": ["C++", "JavaScript", "D3.js"],
            "links": [
                {
                    "type": "github",
                    "url": "https://github.com/Oliver-BE/sorting-algorithms-d3"
                },
                {
                    "type": "external",
                    "url": "https://oliver-be.github.io/sorting-algorithms-d3/"
                },
                {
                    "type": "pdf",
                    "url": "https://mmore500.com/waves/blog/d3-sorting.html"
                }
            ]
        },
        {
            "visible": true,
            "category": "",
            "title": "Future Obscura",
            "description": "A website I created as a part of my final photography portfolio during my independent sudy.",
            "image": {
                "src": "../../images/future-obscura.jpg",
                "alt": "Future Obscura",
                "linkTo": "https://oliver-be.github.io/future-obscura/"
            },
            "links": [
                {
                    "type": "github",
                    "url": "https://github.com/Oliver-BE/future-obscura"
                },
                {
                    "type": "external",
                    "url": "https://oliver-be.github.io/future-obscura/"
                }
            ]
        }
    ],
    "button": {
        "visible": false,
        "label": "Visit on Github",
        "url": "https://github.com/Oliver-BE"
    }
}
